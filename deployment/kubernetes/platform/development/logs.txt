
==> Audit <==
|------------|--------------------------------|----------|-------------|---------|---------------------|---------------------|
|  Command   |              Args              | Profile  |    User     | Version |     Start Time      |      End Time       |
|------------|--------------------------------|----------|-------------|---------|---------------------|---------------------|
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 17:41 IDT | 07 Oct 23 17:41 IDT |
| tunnel     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 17:43 IDT |                     |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 17:43 IDT |                     |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 17:44 IDT |                     |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 17:47 IDT | 07 Oct 23 17:47 IDT |
| ip         | electro ip                     | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 17:55 IDT | 07 Oct 23 17:55 IDT |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 18:17 IDT | 07 Oct 23 18:17 IDT |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 18:18 IDT | 07 Oct 23 18:18 IDT |
| ip         | electro ip                     | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 18:27 IDT | 07 Oct 23 18:27 IDT |
| tunnel     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 18:54 IDT |                     |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 19:17 IDT |                     |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 19:17 IDT |                     |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 19:18 IDT | 07 Oct 23 19:19 IDT |
| tunnel     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 19:25 IDT |                     |
| tunnel     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 19:28 IDT |                     |
| tunnel     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 19:30 IDT |                     |
| stop       | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 19:39 IDT | 07 Oct 23 19:40 IDT |
| delete     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 19:40 IDT | 07 Oct 23 19:40 IDT |
| stop       |                                | minikube | TOMER\tomer | v1.31.2 | 07 Oct 23 19:50 IDT |                     |
| stop       | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 19:55 IDT |                     |
| service    |                                | minikube | TOMER\tomer | v1.31.2 | 07 Oct 23 19:58 IDT |                     |
| start      | --cpus 2 --memory 4g --driver  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 19:58 IDT | 07 Oct 23 20:00 IDT |
|            | docker --profile electro       |          |             |         |                     |                     |
| addons     | enable ingress --profile       | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 20:09 IDT | 07 Oct 23 20:11 IDT |
|            | electro                        |          |             |         |                     |                     |
| tunnel     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 20:34 IDT |                     |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 21:12 IDT | 07 Oct 23 21:12 IDT |
| ip         | electro ip                     | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 21:19 IDT | 07 Oct 23 21:19 IDT |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 21:22 IDT | 07 Oct 23 21:22 IDT |
| ip         | electro ip                     | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 21:26 IDT | 07 Oct 23 21:26 IDT |
| stop       | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 21:30 IDT | 07 Oct 23 21:30 IDT |
| delete     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 07 Oct 23 21:30 IDT | 07 Oct 23 21:31 IDT |
| start      | --cpus 2 --memory 4g --driver  | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 11:18 IDT | 08 Oct 23 11:19 IDT |
|            | docker --profile electro       |          |             |         |                     |                     |
| addons     | enable ingress --profile       | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 11:20 IDT | 08 Oct 23 11:21 IDT |
|            | electro                        |          |             |         |                     |                     |
| tunnel     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 11:22 IDT |                     |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 11:33 IDT | 08 Oct 23 11:33 IDT |
| ip         | electro ip                     | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 11:38 IDT | 08 Oct 23 11:38 IDT |
| stop       | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 12:08 IDT | 08 Oct 23 12:08 IDT |
| delete     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 12:08 IDT | 08 Oct 23 12:08 IDT |
| start      | --cpus 2 --memory 4g --driver  | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 12:09 IDT | 08 Oct 23 12:11 IDT |
|            | docker --profile electro       |          |             |         |                     |                     |
| addons     | enable ingress --profile       | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 12:16 IDT | 08 Oct 23 12:17 IDT |
|            | electro                        |          |             |         |                     |                     |
| tunnel     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 12:17 IDT |                     |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 12:35 IDT | 08 Oct 23 12:36 IDT |
| ip         | electro ip                     | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 12:43 IDT | 08 Oct 23 12:43 IDT |
| stop       | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 13:35 IDT | 08 Oct 23 13:35 IDT |
| delete     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 13:35 IDT | 08 Oct 23 13:35 IDT |
| start      | --cpus 2 --memory 4g --driver  | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 13:35 IDT | 08 Oct 23 13:38 IDT |
|            | docker --profile electro       |          |             |         |                     |                     |
| addons     | enable ingress --profile       | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 13:46 IDT | 08 Oct 23 13:48 IDT |
|            | electro                        |          |             |         |                     |                     |
| tunnel     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 13:52 IDT |                     |
| docker-env | electro docker-env --shell sh  | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 14:21 IDT | 08 Oct 23 14:21 IDT |
| ip         | electro ip                     | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 14:35 IDT | 08 Oct 23 14:35 IDT |
| stop       | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 08 Oct 23 19:28 IDT | 08 Oct 23 19:28 IDT |
| start      | --cpus 2 --memory 4g --driver  | electro  | TOMER\tomer | v1.31.2 | 17 Nov 23 18:50 IST |                     |
|            | docker --profile electro       |          |             |         |                     |                     |
| start      | --cpus 2 --memory 4g --driver  | electro  | TOMER\tomer | v1.31.2 | 17 Nov 23 18:51 IST |                     |
|            | docker --profile electro       |          |             |         |                     |                     |
| start      | --cpus 2 --memory 4g --driver  | electro  | TOMER\tomer | v1.31.2 | 17 Nov 23 18:59 IST | 17 Nov 23 19:06 IST |
|            | docker --profile electro       |          |             |         |                     |                     |
| addons     | enable ingress --profile       | electro  | TOMER\tomer | v1.31.2 | 17 Nov 23 19:08 IST |                     |
|            | electro                        |          |             |         |                     |                     |
| addons     | enable ingress --profile       | electro  | TOMER\tomer | v1.31.2 | 17 Nov 23 19:09 IST |                     |
|            | electro                        |          |             |         |                     |                     |
| addons     | enable ingress --profile       | electro  | TOMER\tomer | v1.31.2 | 17 Nov 23 19:10 IST |                     |
|            | electro                        |          |             |         |                     |                     |
| addons     | enable ingress --profile       | electro  | TOMER\tomer | v1.31.2 | 17 Nov 23 19:16 IST |                     |
|            | electro                        |          |             |         |                     |                     |
| stop       | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 17 Nov 23 19:21 IST | 17 Nov 23 19:22 IST |
| delete     | --profile electro              | electro  | TOMER\tomer | v1.31.2 | 17 Nov 23 19:22 IST | 17 Nov 23 19:22 IST |
| start      | --cpus 2 --memory 4g --driver  | electro  | TOMER\tomer | v1.31.2 | 17 Nov 23 19:22 IST |                     |
|            | docker --profile electro       |          |             |         |                     |                     |
|------------|--------------------------------|----------|-------------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2023/11/17 19:22:48
Running on machine: Tomer
Binary: Built with gc go1.20.7 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I1117 19:22:48.542387   13032 out.go:296] Setting OutFile to fd 104 ...
I1117 19:22:48.542387   13032 out.go:309] Setting ErrFile to fd 108...
I1117 19:22:48.574383   13032 out.go:303] Setting JSON to false
I1117 19:22:48.582963   13032 start.go:128] hostinfo: {"hostname":"Tomer","uptime":141310,"bootTime":1700100457,"procs":313,"os":"windows","platform":"Microsoft Windows 11 Home","platformFamily":"Standalone Workstation","platformVersion":"10.0.22631.2715 Build 22631.2715","kernelVersion":"10.0.22631.2715 Build 22631.2715","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"c192462f-7827-475c-b975-95bc21aeac20"}
W1117 19:22:48.582963   13032 start.go:136] gopshost.Virtualization returned error: not implemented yet
I1117 19:22:48.585450   13032 out.go:177] 😄  [electro] minikube v1.31.2 on Microsoft Windows 11 Home 10.0.22631.2715 Build 22631.2715
I1117 19:22:48.588127   13032 notify.go:220] Checking for updates...
I1117 19:22:48.590828   13032 driver.go:373] Setting default libvirt URI to qemu:///system
I1117 19:22:48.940121   13032 docker.go:121] docker version: linux-24.0.6:Docker Desktop 4.24.2 (124339)
I1117 19:22:48.953080   13032 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1117 19:22:49.618751   13032 info.go:266] docker info: {ID:c72ecd1e-eceb-47af-864a-1e5b8fe2426e Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:30 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:47 OomKillDisable:true NGoroutines:73 SystemTime:2023-11-17 17:22:49.5287276 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:14 KernelVersion:4.19.128-microsoft-standard OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:2 MemTotal:6233096192 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.6 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:8165feabfdfe38c65b599c4993d227328c231fca Expected:8165feabfdfe38c65b599c4993d227328c231fca} RuncCommit:{ID:v1.1.8-0-g82f18fe Expected:v1.1.8-0-g82f18fe} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: bridge-nf-call-iptables is disabled WARNING: bridge-nf-call-ip6tables is disabled WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2-desktop.5] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.22.0-desktop.2] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.8] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.0.7]] Warnings:<nil>}}
I1117 19:22:49.621609   13032 out.go:177] ✨  Using the docker driver based on user configuration
I1117 19:22:49.623276   13032 start.go:298] selected driver: docker
I1117 19:22:49.623276   13032 start.go:902] validating driver "docker" against <nil>
I1117 19:22:49.623276   13032 start.go:913] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1117 19:22:49.948766   13032 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1117 19:22:50.682163   13032 info.go:266] docker info: {ID:c72ecd1e-eceb-47af-864a-1e5b8fe2426e Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:30 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:47 OomKillDisable:true NGoroutines:73 SystemTime:2023-11-17 17:22:50.4862383 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:14 KernelVersion:4.19.128-microsoft-standard OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:2 MemTotal:6233096192 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.6 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:8165feabfdfe38c65b599c4993d227328c231fca Expected:8165feabfdfe38c65b599c4993d227328c231fca} RuncCommit:{ID:v1.1.8-0-g82f18fe Expected:v1.1.8-0-g82f18fe} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: bridge-nf-call-iptables is disabled WARNING: bridge-nf-call-ip6tables is disabled WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2-desktop.5] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.22.0-desktop.2] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.8] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.0.7]] Warnings:<nil>}}
I1117 19:22:50.685532   13032 start_flags.go:305] no existing cluster config was found, will generate one from the flags 
I1117 19:22:50.688719   13032 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]
I1117 19:22:50.692109   13032 out.go:177] 📌  Using Docker Desktop driver with root privileges
I1117 19:22:50.696097   13032 cni.go:84] Creating CNI manager for ""
I1117 19:22:50.696097   13032 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1117 19:22:50.696097   13032 start_flags.go:314] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I1117 19:22:50.696097   13032 start_flags.go:319] config:
{Name:electro KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4096 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:electro Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\tomer:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I1117 19:22:50.699318   13032 out.go:177] 👍  Starting control plane node electro in cluster electro
I1117 19:22:50.703016   13032 cache.go:122] Beginning downloading kic base image for docker with docker
I1117 19:22:50.704330   13032 out.go:177] 🚜  Pulling base image ...
I1117 19:22:50.708111   13032 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 in local docker daemon
I1117 19:22:50.708111   13032 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I1117 19:22:50.709604   13032 preload.go:148] Found local preload: C:\Users\tomer\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4
I1117 19:22:50.709604   13032 cache.go:57] Caching tarball of preloaded images
I1117 19:22:50.711031   13032 preload.go:174] Found C:\Users\tomer\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I1117 19:22:50.711031   13032 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.4 on docker
I1117 19:22:50.712047   13032 profile.go:148] Saving config to C:\Users\tomer\.minikube\profiles\electro\config.json ...
I1117 19:22:50.712047   13032 lock.go:35] WriteFile acquiring C:\Users\tomer\.minikube\profiles\electro\config.json: {Name:mk9a9ee79e9b2aaf6f21084634152a4374ff769e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1117 19:22:51.006505   13032 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 in local docker daemon, skipping pull
I1117 19:22:51.006505   13032 cache.go:145] gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 exists in daemon, skipping load
I1117 19:22:51.007021   13032 cache.go:195] Successfully downloaded all kic artifacts
I1117 19:22:51.009420   13032 start.go:365] acquiring machines lock for electro: {Name:mkcb39df561f59cf164648adfc0c448fc65856a4 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I1117 19:22:51.009420   13032 start.go:369] acquired machines lock for "electro" in 0s
I1117 19:22:51.009420   13032 start.go:93] Provisioning new machine with config: &{Name:electro KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4096 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:electro Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\tomer:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0} &{Name: IP: Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}
I1117 19:22:51.011364   13032 start.go:125] createHost starting for "" (driver="docker")
I1117 19:22:51.012941   13032 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=4096MB) ...
I1117 19:22:51.014020   13032 start.go:159] libmachine.API.Create for "electro" (driver="docker")
I1117 19:22:51.015135   13032 client.go:168] LocalClient.Create starting
I1117 19:22:51.016976   13032 main.go:141] libmachine: Reading certificate data from C:\Users\tomer\.minikube\certs\ca.pem
I1117 19:22:51.018222   13032 main.go:141] libmachine: Decoding PEM data...
I1117 19:22:51.018222   13032 main.go:141] libmachine: Parsing certificate...
I1117 19:22:51.023981   13032 main.go:141] libmachine: Reading certificate data from C:\Users\tomer\.minikube\certs\cert.pem
I1117 19:22:51.023981   13032 main.go:141] libmachine: Decoding PEM data...
I1117 19:22:51.023981   13032 main.go:141] libmachine: Parsing certificate...
I1117 19:22:51.038944   13032 cli_runner.go:164] Run: docker network inspect electro --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W1117 19:22:51.252362   13032 cli_runner.go:211] docker network inspect electro --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I1117 19:22:51.264323   13032 network_create.go:281] running [docker network inspect electro] to gather additional debugging logs...
I1117 19:22:51.264323   13032 cli_runner.go:164] Run: docker network inspect electro
W1117 19:22:51.469716   13032 cli_runner.go:211] docker network inspect electro returned with exit code 1
I1117 19:22:51.469716   13032 network_create.go:284] error running [docker network inspect electro]: docker network inspect electro: exit status 1
stdout:
[]

stderr:
Error response from daemon: network electro not found
I1117 19:22:51.469716   13032 network_create.go:286] output of [docker network inspect electro]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network electro not found

** /stderr **
I1117 19:22:51.479165   13032 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I1117 19:22:51.739248   13032 network.go:209] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc001302060}
I1117 19:22:51.739248   13032 network_create.go:123] attempt to create docker network electro 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I1117 19:22:51.751051   13032 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=electro electro
I1117 19:22:52.100879   13032 network_create.go:107] docker network electro 192.168.49.0/24 created
I1117 19:22:52.101386   13032 kic.go:117] calculated static IP "192.168.49.2" for the "electro" container
I1117 19:22:52.128268   13032 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I1117 19:22:52.342408   13032 cli_runner.go:164] Run: docker volume create electro --label name.minikube.sigs.k8s.io=electro --label created_by.minikube.sigs.k8s.io=true
I1117 19:22:52.607847   13032 oci.go:103] Successfully created a docker volume electro
I1117 19:22:52.628500   13032 cli_runner.go:164] Run: docker run --rm --name electro-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=electro --entrypoint /usr/bin/test -v electro:/var gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -d /var/lib
I1117 19:23:04.273205   13032 cli_runner.go:217] Completed: docker run --rm --name electro-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=electro --entrypoint /usr/bin/test -v electro:/var gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -d /var/lib: (11.6447052s)
I1117 19:23:04.273205   13032 oci.go:107] Successfully prepared a docker volume electro
I1117 19:23:04.273205   13032 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I1117 19:23:04.273921   13032 kic.go:190] Starting extracting preloaded images to volume ...
I1117 19:23:04.290596   13032 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\tomer\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v electro:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -I lz4 -xf /preloaded.tar -C /extractDir
I1117 19:23:38.416873   13032 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\tomer\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v electro:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -I lz4 -xf /preloaded.tar -C /extractDir: (34.126277s)
I1117 19:23:38.416873   13032 kic.go:199] duration metric: took 34.143668 seconds to extract preloaded images to volume
I1117 19:23:38.452109   13032 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1117 19:23:39.093274   13032 info.go:266] docker info: {ID:c72ecd1e-eceb-47af-864a-1e5b8fe2426e Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:30 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:47 OomKillDisable:true NGoroutines:73 SystemTime:2023-11-17 17:23:39.0398121 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:14 KernelVersion:4.19.128-microsoft-standard OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:2 MemTotal:6233096192 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.6 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:8165feabfdfe38c65b599c4993d227328c231fca Expected:8165feabfdfe38c65b599c4993d227328c231fca} RuncCommit:{ID:v1.1.8-0-g82f18fe Expected:v1.1.8-0-g82f18fe} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: bridge-nf-call-iptables is disabled WARNING: bridge-nf-call-ip6tables is disabled WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2-desktop.5] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.22.0-desktop.2] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.8] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.0.7]] Warnings:<nil>}}
I1117 19:23:39.103693   13032 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I1117 19:23:39.719421   13032 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname electro --name electro --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=electro --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=electro --network electro --ip 192.168.49.2 --volume electro:/var --security-opt apparmor=unconfined --memory=4096mb --memory-swap=4096mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631
I1117 19:23:40.978655   13032 cli_runner.go:217] Completed: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname electro --name electro --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=electro --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=electro --network electro --ip 192.168.49.2 --volume electro:/var --security-opt apparmor=unconfined --memory=4096mb --memory-swap=4096mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631: (1.2592334s)
I1117 19:23:40.999923   13032 cli_runner.go:164] Run: docker container inspect electro --format={{.State.Running}}
I1117 19:23:41.335550   13032 cli_runner.go:164] Run: docker container inspect electro --format={{.State.Status}}
I1117 19:23:41.608885   13032 cli_runner.go:164] Run: docker exec electro stat /var/lib/dpkg/alternatives/iptables
I1117 19:23:41.921504   13032 oci.go:144] the created container "electro" has a running status.
I1117 19:23:41.921504   13032 kic.go:221] Creating ssh key for kic: C:\Users\tomer\.minikube\machines\electro\id_rsa...
I1117 19:23:42.412942   13032 kic_runner.go:191] docker (temp): C:\Users\tomer\.minikube\machines\electro\id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I1117 19:23:43.216949   13032 cli_runner.go:164] Run: docker container inspect electro --format={{.State.Status}}
I1117 19:23:43.531230   13032 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I1117 19:23:43.531230   13032 kic_runner.go:114] Args: [docker exec --privileged electro chown docker:docker /home/docker/.ssh/authorized_keys]
I1117 19:23:43.965145   13032 kic.go:261] ensuring only current user has permissions to key file located at : C:\Users\tomer\.minikube\machines\electro\id_rsa...
I1117 19:23:45.202161   13032 cli_runner.go:164] Run: docker container inspect electro --format={{.State.Status}}
I1117 19:23:45.453450   13032 machine.go:88] provisioning docker machine ...
I1117 19:23:45.454534   13032 ubuntu.go:169] provisioning hostname "electro"
I1117 19:23:45.467203   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:23:45.677734   13032 main.go:141] libmachine: Using SSH client type: native
I1117 19:23:45.700953   13032 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xc69400] 0xc6c2a0 <nil>  [] 0s} 127.0.0.1 57140 <nil> <nil>}
I1117 19:23:45.700953   13032 main.go:141] libmachine: About to run SSH command:
sudo hostname electro && echo "electro" | sudo tee /etc/hostname
I1117 19:23:46.445685   13032 main.go:141] libmachine: SSH cmd err, output: <nil>: electro

I1117 19:23:46.467513   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:23:46.785000   13032 main.go:141] libmachine: Using SSH client type: native
I1117 19:23:46.787116   13032 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xc69400] 0xc6c2a0 <nil>  [] 0s} 127.0.0.1 57140 <nil> <nil>}
I1117 19:23:46.787116   13032 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\selectro' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 electro/g' /etc/hosts;
			else 
				echo '127.0.1.1 electro' | sudo tee -a /etc/hosts; 
			fi
		fi
I1117 19:23:47.019657   13032 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I1117 19:23:47.020355   13032 ubuntu.go:175] set auth options {CertDir:C:\Users\tomer\.minikube CaCertPath:C:\Users\tomer\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\tomer\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\tomer\.minikube\machines\server.pem ServerKeyPath:C:\Users\tomer\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\tomer\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\tomer\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\tomer\.minikube}
I1117 19:23:47.020355   13032 ubuntu.go:177] setting up certificates
I1117 19:23:47.021047   13032 provision.go:83] configureAuth start
I1117 19:23:47.048764   13032 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" electro
I1117 19:23:47.303280   13032 provision.go:138] copyHostCerts
I1117 19:23:47.304892   13032 exec_runner.go:144] found C:\Users\tomer\.minikube/ca.pem, removing ...
I1117 19:23:47.304892   13032 exec_runner.go:203] rm: C:\Users\tomer\.minikube\ca.pem
I1117 19:23:47.305504   13032 exec_runner.go:151] cp: C:\Users\tomer\.minikube\certs\ca.pem --> C:\Users\tomer\.minikube/ca.pem (1074 bytes)
I1117 19:23:47.307760   13032 exec_runner.go:144] found C:\Users\tomer\.minikube/cert.pem, removing ...
I1117 19:23:47.307760   13032 exec_runner.go:203] rm: C:\Users\tomer\.minikube\cert.pem
I1117 19:23:47.308870   13032 exec_runner.go:151] cp: C:\Users\tomer\.minikube\certs\cert.pem --> C:\Users\tomer\.minikube/cert.pem (1119 bytes)
I1117 19:23:47.311915   13032 exec_runner.go:144] found C:\Users\tomer\.minikube/key.pem, removing ...
I1117 19:23:47.312466   13032 exec_runner.go:203] rm: C:\Users\tomer\.minikube\key.pem
I1117 19:23:47.312696   13032 exec_runner.go:151] cp: C:\Users\tomer\.minikube\certs\key.pem --> C:\Users\tomer\.minikube/key.pem (1675 bytes)
I1117 19:23:47.313843   13032 provision.go:112] generating server cert: C:\Users\tomer\.minikube\machines\server.pem ca-key=C:\Users\tomer\.minikube\certs\ca.pem private-key=C:\Users\tomer\.minikube\certs\ca-key.pem org=tomer.electro san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube electro]
I1117 19:23:47.760281   13032 provision.go:172] copyRemoteCerts
I1117 19:23:47.803524   13032 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I1117 19:23:47.820098   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:23:48.067275   13032 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:57140 SSHKeyPath:C:\Users\tomer\.minikube\machines\electro\id_rsa Username:docker}
I1117 19:23:48.247506   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1074 bytes)
I1117 19:23:48.331458   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\machines\server.pem --> /etc/docker/server.pem (1196 bytes)
I1117 19:23:48.416677   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I1117 19:23:48.498263   13032 provision.go:86] duration metric: configureAuth took 1.4772163s
I1117 19:23:48.498778   13032 ubuntu.go:193] setting minikube options for container-runtime
I1117 19:23:48.500296   13032 config.go:182] Loaded profile config "electro": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.27.4
I1117 19:23:48.528520   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:23:48.838904   13032 main.go:141] libmachine: Using SSH client type: native
I1117 19:23:48.839978   13032 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xc69400] 0xc6c2a0 <nil>  [] 0s} 127.0.0.1 57140 <nil> <nil>}
I1117 19:23:48.839978   13032 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I1117 19:23:49.077916   13032 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I1117 19:23:49.077916   13032 ubuntu.go:71] root file system type: overlay
I1117 19:23:49.078592   13032 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I1117 19:23:49.098733   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:23:49.377169   13032 main.go:141] libmachine: Using SSH client type: native
I1117 19:23:49.377801   13032 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xc69400] 0xc6c2a0 <nil>  [] 0s} 127.0.0.1 57140 <nil> <nil>}
I1117 19:23:49.377801   13032 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I1117 19:23:49.598839   13032 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I1117 19:23:49.621150   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:23:49.935984   13032 main.go:141] libmachine: Using SSH client type: native
I1117 19:23:49.937269   13032 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xc69400] 0xc6c2a0 <nil>  [] 0s} 127.0.0.1 57140 <nil> <nil>}
I1117 19:23:49.937269   13032 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I1117 19:23:51.491743   13032 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2023-07-07 14:50:55.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2023-11-17 17:23:49.585866000 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I1117 19:23:51.491743   13032 machine.go:91] provisioned docker machine in 6.0382928s
I1117 19:23:51.491804   13032 client.go:171] LocalClient.Create took 1m0.4766691s
I1117 19:23:51.491804   13032 start.go:167] duration metric: libmachine.API.Create for "electro" took 1m0.4777842s
I1117 19:23:51.492400   13032 start.go:300] post-start starting for "electro" (driver="docker")
I1117 19:23:51.492977   13032 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I1117 19:23:51.533266   13032 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I1117 19:23:51.553848   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:23:51.749335   13032 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:57140 SSHKeyPath:C:\Users\tomer\.minikube\machines\electro\id_rsa Username:docker}
I1117 19:23:51.969991   13032 ssh_runner.go:195] Run: cat /etc/os-release
I1117 19:23:51.978747   13032 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I1117 19:23:51.978747   13032 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I1117 19:23:51.978747   13032 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I1117 19:23:51.978747   13032 info.go:137] Remote host: Ubuntu 22.04.2 LTS
I1117 19:23:51.979374   13032 filesync.go:126] Scanning C:\Users\tomer\.minikube\addons for local assets ...
I1117 19:23:51.979936   13032 filesync.go:126] Scanning C:\Users\tomer\.minikube\files for local assets ...
I1117 19:23:51.980467   13032 start.go:303] post-start completed in 488.067ms
I1117 19:23:51.999654   13032 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" electro
I1117 19:23:52.196907   13032 profile.go:148] Saving config to C:\Users\tomer\.minikube\profiles\electro\config.json ...
I1117 19:23:52.249470   13032 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I1117 19:23:52.263955   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:23:52.566282   13032 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:57140 SSHKeyPath:C:\Users\tomer\.minikube\machines\electro\id_rsa Username:docker}
I1117 19:23:52.702343   13032 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I1117 19:23:52.715785   13032 start.go:128] duration metric: createHost completed in 1m1.704421s
I1117 19:23:52.715785   13032 start.go:83] releasing machines lock for "electro", held for 1m1.7063654s
I1117 19:23:52.735712   13032 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" electro
I1117 19:23:53.040954   13032 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I1117 19:23:53.069663   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:23:53.083758   13032 ssh_runner.go:195] Run: cat /version.json
I1117 19:23:53.108651   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:23:53.353810   13032 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:57140 SSHKeyPath:C:\Users\tomer\.minikube\machines\electro\id_rsa Username:docker}
I1117 19:23:53.367820   13032 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:57140 SSHKeyPath:C:\Users\tomer\.minikube\machines\electro\id_rsa Username:docker}
I1117 19:23:54.037586   13032 ssh_runner.go:195] Run: systemctl --version
I1117 19:23:54.075500   13032 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I1117 19:23:54.130133   13032 ssh_runner.go:195] Run: sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
W1117 19:23:54.154582   13032 start.go:410] unable to name loopback interface in configureRuntimes: unable to patch loopback cni config "/etc/cni/net.d/*loopback.conf*": sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;: Process exited with status 1
stdout:

stderr:
find: '\\etc\\cni\\net.d': No such file or directory
I1117 19:23:54.190840   13032 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I1117 19:23:54.266439   13032 cni.go:262] disabled [/etc/cni/net.d/100-crio-bridge.conf, /etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)
I1117 19:23:54.266439   13032 start.go:466] detecting cgroup driver to use...
I1117 19:23:54.266439   13032 detect.go:196] detected "cgroupfs" cgroup driver on host os
I1117 19:23:54.269805   13032 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I1117 19:23:54.352022   13032 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I1117 19:23:54.425416   13032 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I1117 19:23:54.452115   13032 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I1117 19:23:54.495790   13032 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I1117 19:23:54.575329   13032 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1117 19:23:54.665847   13032 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I1117 19:23:54.740477   13032 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1117 19:23:54.821582   13032 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I1117 19:23:54.892533   13032 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I1117 19:23:54.965221   13032 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I1117 19:23:54.991265   13032 crio.go:148] couldn't verify netfilter by "sudo sysctl net.bridge.bridge-nf-call-iptables" which might be okay. error: sudo sysctl net.bridge.bridge-nf-call-iptables: Process exited with status 255
stdout:

stderr:
sysctl: cannot stat /proc/sys/net/bridge/bridge-nf-call-iptables: No such file or directory
I1117 19:23:55.041824   13032 ssh_runner.go:195] Run: sudo modprobe br_netfilter
W1117 19:23:55.069192   13032 crio.go:151] "sudo sysctl net.bridge.bridge-nf-call-iptables" failed, which may be ok: sudo modprobe br_netfilter: Process exited with status 1
stdout:

stderr:
modprobe: FATAL: Module br_netfilter not found in directory /lib/modules/4.19.128-microsoft-standard
I1117 19:23:55.123630   13032 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I1117 19:23:55.201579   13032 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1117 19:23:55.322029   13032 ssh_runner.go:195] Run: sudo systemctl restart containerd
I1117 19:23:55.445281   13032 start.go:466] detecting cgroup driver to use...
I1117 19:23:55.445281   13032 detect.go:196] detected "cgroupfs" cgroup driver on host os
I1117 19:23:55.466125   13032 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I1117 19:23:55.485612   13032 cruntime.go:276] skipping containerd shutdown because we are bound to it
I1117 19:23:55.504884   13032 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I1117 19:23:55.526649   13032 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I1117 19:23:55.581984   13032 ssh_runner.go:195] Run: which cri-dockerd
I1117 19:23:55.607290   13032 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I1117 19:23:55.621776   13032 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I1117 19:23:55.673725   13032 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I1117 19:23:55.808326   13032 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I1117 19:23:55.928448   13032 docker.go:535] configuring docker to use "cgroupfs" as cgroup driver...
I1117 19:23:55.928448   13032 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (144 bytes)
I1117 19:23:55.992159   13032 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1117 19:23:56.164064   13032 ssh_runner.go:195] Run: sudo systemctl restart docker
I1117 19:23:56.751311   13032 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I1117 19:23:56.944027   13032 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I1117 19:23:57.079027   13032 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I1117 19:23:57.239973   13032 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1117 19:23:57.419128   13032 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I1117 19:23:57.482456   13032 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1117 19:23:57.661408   13032 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I1117 19:23:58.386745   13032 start.go:513] Will wait 60s for socket path /var/run/cri-dockerd.sock
I1117 19:23:58.436997   13032 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I1117 19:23:58.452593   13032 start.go:534] Will wait 60s for crictl version
I1117 19:23:58.499272   13032 ssh_runner.go:195] Run: which crictl
I1117 19:23:58.556298   13032 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I1117 19:23:59.055022   13032 start.go:550] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.4
RuntimeApiVersion:  v1
I1117 19:23:59.074208   13032 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1117 19:23:59.396267   13032 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1117 19:23:59.451777   13032 out.go:204] 🐳  Preparing Kubernetes v1.27.4 on Docker 24.0.4 ...
I1117 19:23:59.473501   13032 cli_runner.go:164] Run: docker exec -t electro dig +short host.docker.internal
I1117 19:24:00.006091   13032 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I1117 19:24:00.081381   13032 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I1117 19:24:00.099696   13032 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.254	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I1117 19:24:00.164987   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" electro
I1117 19:24:00.601122   13032 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I1117 19:24:00.625261   13032 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1117 19:24:00.694358   13032 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.4
registry.k8s.io/kube-scheduler:v1.27.4
registry.k8s.io/kube-controller-manager:v1.27.4
registry.k8s.io/kube-proxy:v1.27.4
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1117 19:24:00.694795   13032 docker.go:566] Images already preloaded, skipping extraction
I1117 19:24:00.720531   13032 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1117 19:24:00.781866   13032 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.4
registry.k8s.io/kube-controller-manager:v1.27.4
registry.k8s.io/kube-proxy:v1.27.4
registry.k8s.io/kube-scheduler:v1.27.4
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1117 19:24:00.781866   13032 cache_images.go:84] Images are preloaded, skipping loading
I1117 19:24:00.813099   13032 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I1117 19:24:01.018073   13032 cni.go:84] Creating CNI manager for ""
I1117 19:24:01.018164   13032 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1117 19:24:01.021874   13032 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I1117 19:24:01.023365   13032 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.27.4 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:electro NodeName:electro DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I1117 19:24:01.025951   13032 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "electro"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.27.4
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I1117 19:24:01.033421   13032 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.27.4/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=electro --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.27.4 ClusterName:electro Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I1117 19:24:01.101436   13032 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.27.4
I1117 19:24:01.140830   13032 binaries.go:44] Found k8s binaries, skipping transfer
I1117 19:24:01.202933   13032 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I1117 19:24:01.232267   13032 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (368 bytes)
I1117 19:24:01.269375   13032 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I1117 19:24:01.308087   13032 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2090 bytes)
I1117 19:24:01.381078   13032 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I1117 19:24:01.392614   13032 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I1117 19:24:01.422735   13032 certs.go:56] Setting up C:\Users\tomer\.minikube\profiles\electro for IP: 192.168.49.2
I1117 19:24:01.424016   13032 certs.go:190] acquiring lock for shared ca certs: {Name:mkc1f6111c6b69a6980986ab47a53873f625c682 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1117 19:24:01.428863   13032 certs.go:199] skipping minikubeCA CA generation: C:\Users\tomer\.minikube\ca.key
I1117 19:24:01.429485   13032 certs.go:199] skipping proxyClientCA CA generation: C:\Users\tomer\.minikube\proxy-client-ca.key
I1117 19:24:01.431477   13032 certs.go:319] generating minikube-user signed cert: C:\Users\tomer\.minikube\profiles\electro\client.key
I1117 19:24:01.432999   13032 crypto.go:68] Generating cert C:\Users\tomer\.minikube\profiles\electro\client.crt with IP's: []
I1117 19:24:01.744588   13032 crypto.go:156] Writing cert to C:\Users\tomer\.minikube\profiles\electro\client.crt ...
I1117 19:24:01.744588   13032 lock.go:35] WriteFile acquiring C:\Users\tomer\.minikube\profiles\electro\client.crt: {Name:mk8d62081f814e5c9dc8f0acc7673d40a6e359be Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1117 19:24:01.746228   13032 crypto.go:164] Writing key to C:\Users\tomer\.minikube\profiles\electro\client.key ...
I1117 19:24:01.746228   13032 lock.go:35] WriteFile acquiring C:\Users\tomer\.minikube\profiles\electro\client.key: {Name:mk4432d0b3ff8b71ffdad3487c8285b9d9c76c2a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1117 19:24:01.747875   13032 certs.go:319] generating minikube signed cert: C:\Users\tomer\.minikube\profiles\electro\apiserver.key.dd3b5fb2
I1117 19:24:01.747875   13032 crypto.go:68] Generating cert C:\Users\tomer\.minikube\profiles\electro\apiserver.crt.dd3b5fb2 with IP's: [192.168.49.2 10.96.0.1 127.0.0.1 10.0.0.1]
I1117 19:24:02.050380   13032 crypto.go:156] Writing cert to C:\Users\tomer\.minikube\profiles\electro\apiserver.crt.dd3b5fb2 ...
I1117 19:24:02.050380   13032 lock.go:35] WriteFile acquiring C:\Users\tomer\.minikube\profiles\electro\apiserver.crt.dd3b5fb2: {Name:mk8cb3d76588901a335286f45f97b6674bd66918 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1117 19:24:02.051473   13032 crypto.go:164] Writing key to C:\Users\tomer\.minikube\profiles\electro\apiserver.key.dd3b5fb2 ...
I1117 19:24:02.051473   13032 lock.go:35] WriteFile acquiring C:\Users\tomer\.minikube\profiles\electro\apiserver.key.dd3b5fb2: {Name:mkbc9a6815c90f5184ffdc9bab709ca13cc5ca49 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1117 19:24:02.052014   13032 certs.go:337] copying C:\Users\tomer\.minikube\profiles\electro\apiserver.crt.dd3b5fb2 -> C:\Users\tomer\.minikube\profiles\electro\apiserver.crt
I1117 19:24:02.074114   13032 certs.go:341] copying C:\Users\tomer\.minikube\profiles\electro\apiserver.key.dd3b5fb2 -> C:\Users\tomer\.minikube\profiles\electro\apiserver.key
I1117 19:24:02.075202   13032 certs.go:319] generating aggregator signed cert: C:\Users\tomer\.minikube\profiles\electro\proxy-client.key
I1117 19:24:02.075202   13032 crypto.go:68] Generating cert C:\Users\tomer\.minikube\profiles\electro\proxy-client.crt with IP's: []
I1117 19:24:02.279740   13032 crypto.go:156] Writing cert to C:\Users\tomer\.minikube\profiles\electro\proxy-client.crt ...
I1117 19:24:02.279740   13032 lock.go:35] WriteFile acquiring C:\Users\tomer\.minikube\profiles\electro\proxy-client.crt: {Name:mk370588144a5523abb8ed8baf6729615854c036 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1117 19:24:02.280657   13032 crypto.go:164] Writing key to C:\Users\tomer\.minikube\profiles\electro\proxy-client.key ...
I1117 19:24:02.280657   13032 lock.go:35] WriteFile acquiring C:\Users\tomer\.minikube\profiles\electro\proxy-client.key: {Name:mkb41fd0cc3a1ff95bbbe2d86862906ac447b907 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1117 19:24:02.297188   13032 certs.go:437] found cert: C:\Users\tomer\.minikube\certs\C:\Users\tomer\.minikube\certs\ca-key.pem (1679 bytes)
I1117 19:24:02.297188   13032 certs.go:437] found cert: C:\Users\tomer\.minikube\certs\C:\Users\tomer\.minikube\certs\ca.pem (1074 bytes)
I1117 19:24:02.297188   13032 certs.go:437] found cert: C:\Users\tomer\.minikube\certs\C:\Users\tomer\.minikube\certs\cert.pem (1119 bytes)
I1117 19:24:02.298188   13032 certs.go:437] found cert: C:\Users\tomer\.minikube\certs\C:\Users\tomer\.minikube\certs\key.pem (1675 bytes)
I1117 19:24:02.332165   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\profiles\electro\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I1117 19:24:02.376271   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\profiles\electro\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I1117 19:24:02.427087   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\profiles\electro\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I1117 19:24:02.474343   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\profiles\electro\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I1117 19:24:02.523086   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I1117 19:24:02.577396   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I1117 19:24:02.632711   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I1117 19:24:02.691129   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I1117 19:24:02.749732   13032 ssh_runner.go:362] scp C:\Users\tomer\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I1117 19:24:02.815645   13032 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I1117 19:24:02.893506   13032 ssh_runner.go:195] Run: openssl version
I1117 19:24:02.950073   13032 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I1117 19:24:03.013718   13032 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I1117 19:24:03.025954   13032 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Sep  4 15:20 /usr/share/ca-certificates/minikubeCA.pem
I1117 19:24:03.060135   13032 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I1117 19:24:03.109114   13032 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I1117 19:24:03.164970   13032 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I1117 19:24:03.177513   13032 certs.go:353] certs directory doesn't exist, likely first start: ls /var/lib/minikube/certs/etcd: Process exited with status 2
stdout:

stderr:
ls: cannot access '/var/lib/minikube/certs/etcd': No such file or directory
I1117 19:24:03.178691   13032 kubeadm.go:404] StartCluster: {Name:electro KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4096 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:electro Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\tomer:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I1117 19:24:03.196009   13032 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I1117 19:24:03.256471   13032 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I1117 19:24:03.296430   13032 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I1117 19:24:03.321558   13032 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I1117 19:24:03.356480   13032 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1117 19:24:03.388463   13032 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I1117 19:24:03.391237   13032 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I1117 19:24:04.558928   13032 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I1117 19:24:04.558928   13032 kubeadm.go:322] 	[WARNING FileContent--proc-sys-net-bridge-bridge-nf-call-iptables]: /proc/sys/net/bridge/bridge-nf-call-iptables does not exist
I1117 19:24:29.284092   13032 kubeadm.go:322] [init] Using Kubernetes version: v1.27.4
I1117 19:24:29.284092   13032 kubeadm.go:322] [preflight] Running pre-flight checks
I1117 19:24:29.284424   13032 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I1117 19:24:29.284424   13032 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I1117 19:24:29.284936   13032 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I1117 19:24:29.284936   13032 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I1117 19:24:29.287746   13032 out.go:204]     ▪ Generating certificates and keys ...
I1117 19:24:29.302176   13032 kubeadm.go:322] [certs] Using existing ca certificate authority
I1117 19:24:29.302704   13032 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I1117 19:24:29.303553   13032 kubeadm.go:322] [certs] Generating "apiserver-kubelet-client" certificate and key
I1117 19:24:29.303553   13032 kubeadm.go:322] [certs] Generating "front-proxy-ca" certificate and key
I1117 19:24:29.303553   13032 kubeadm.go:322] [certs] Generating "front-proxy-client" certificate and key
I1117 19:24:29.304100   13032 kubeadm.go:322] [certs] Generating "etcd/ca" certificate and key
I1117 19:24:29.304484   13032 kubeadm.go:322] [certs] Generating "etcd/server" certificate and key
I1117 19:24:29.304484   13032 kubeadm.go:322] [certs] etcd/server serving cert is signed for DNS names [electro localhost] and IPs [192.168.49.2 127.0.0.1 ::1]
I1117 19:24:29.304484   13032 kubeadm.go:322] [certs] Generating "etcd/peer" certificate and key
I1117 19:24:29.304994   13032 kubeadm.go:322] [certs] etcd/peer serving cert is signed for DNS names [electro localhost] and IPs [192.168.49.2 127.0.0.1 ::1]
I1117 19:24:29.304994   13032 kubeadm.go:322] [certs] Generating "etcd/healthcheck-client" certificate and key
I1117 19:24:29.304994   13032 kubeadm.go:322] [certs] Generating "apiserver-etcd-client" certificate and key
I1117 19:24:29.304994   13032 kubeadm.go:322] [certs] Generating "sa" key and public key
I1117 19:24:29.306009   13032 kubeadm.go:322] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I1117 19:24:29.306009   13032 kubeadm.go:322] [kubeconfig] Writing "admin.conf" kubeconfig file
I1117 19:24:29.306009   13032 kubeadm.go:322] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I1117 19:24:29.306009   13032 kubeadm.go:322] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I1117 19:24:29.306651   13032 kubeadm.go:322] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I1117 19:24:29.306651   13032 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I1117 19:24:29.308187   13032 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I1117 19:24:29.308187   13032 kubeadm.go:322] [kubelet-start] Starting the kubelet
I1117 19:24:29.308187   13032 kubeadm.go:322] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I1117 19:24:29.313560   13032 out.go:204]     ▪ Booting up control plane ...
I1117 19:24:29.318226   13032 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-apiserver"
I1117 19:24:29.320494   13032 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I1117 19:24:29.321355   13032 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-scheduler"
I1117 19:24:29.321355   13032 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I1117 19:24:29.322386   13032 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
W1117 19:24:29.349807   13032 out.go:239] 💢  initialization failed, will try again: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": wait: remote command exited without exit status or exit signal
stdout:
[init] Using Kubernetes version: v1.27.4
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [electro localhost] and IPs [192.168.49.2 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [electro localhost] and IPs [192.168.49.2 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s

stderr:
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING FileContent--proc-sys-net-bridge-bridge-nf-call-iptables]: /proc/sys/net/bridge/bridge-nf-call-iptables does not exist

I1117 19:24:29.354533   13032 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
W1117 19:24:29.355089   13032 ssh_runner.go:129] session error, resetting client: EOF
I1117 19:24:29.363306   13032 retry.go:31] will retry after 254.729977ms: EOF
I1117 19:24:29.657143   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
I1117 19:24:39.201835   13032 cli_runner.go:217] Completed: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: (9.544455s)
I1117 19:24:39.201835   13032 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:57140 SSHKeyPath:C:\Users\tomer\.minikube\machines\electro\id_rsa Username:docker}
W1117 19:24:41.250887   13032 sshutil.go:64] dial failure (will retry): dial tcp 127.0.0.1:57140: connectex: No connection could be made because the target machine actively refused it.
W1117 19:24:41.252545   13032 kubeadm.go:898] /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force": <nil>
I1117 19:24:41.278897   13032 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I1117 19:24:41.290120   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:41.513251   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:41.515461   13032 retry.go:31] will retry after 200.063455ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:41.752216   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:42.151473   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:42.151983   13032 retry.go:31] will retry after 463.85607ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:42.649740   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:42.899425   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
W1117 19:24:42.899563   13032 kubeadm.go:446] delete failed: NewSession: new client: new client: dial tcp 127.0.0.1:57140: connectex: No connection could be made because the target machine actively refused it.
I1117 19:24:42.899563   13032 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I1117 19:24:42.926143   13032 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1117 19:24:42.940239   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:43.237594   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:43.237594   13032 retry.go:31] will retry after 179.41231ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:43.441145   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:43.716257   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:43.716636   13032 retry.go:31] will retry after 238.613139ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:43.986541   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:44.243300   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:44.243300   13032 kubeadm.go:152] config check failed, skipping stale config cleanup: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:44.243826   13032 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I1117 19:24:44.259220   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:44.537668   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:44.537668   13032 retry.go:31] will retry after 292.272632ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:44.873282   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:45.178923   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:45.178923   13032 retry.go:31] will retry after 527.655209ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:45.729414   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:45.992504   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:45.992564   13032 kubeadm.go:406] StartCluster complete in 42.8138726s
I1117 19:24:45.997445   13032 cri.go:54] listing CRI containers in root : {State:all Name:kube-apiserver Namespaces:[]}
I1117 19:24:46.029201   13032 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-apiserver
I1117 19:24:46.046525   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:46.301932   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:46.301932   13032 retry.go:31] will retry after 148.013144ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:46.475511   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:46.813170   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:46.813170   13032 retry.go:31] will retry after 539.420396ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:47.389462   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:47.671256   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
E1117 19:24:47.671256   13032 logs.go:281] Failed to list containers for "kube-apiserver": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:47.671968   13032 cri.go:54] listing CRI containers in root : {State:all Name:etcd Namespaces:[]}
I1117 19:24:47.704810   13032 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=etcd
I1117 19:24:47.720446   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:47.964723   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:47.964723   13032 retry.go:31] will retry after 313.971087ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:48.298096   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:48.590324   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:48.590324   13032 retry.go:31] will retry after 288.505644ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:48.916989   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:49.211365   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:49.211928   13032 retry.go:31] will retry after 328.140201ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:49.567594   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:49.866042   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
E1117 19:24:49.866042   13032 logs.go:281] Failed to list containers for "etcd": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:49.866551   13032 cri.go:54] listing CRI containers in root : {State:all Name:coredns Namespaces:[]}
I1117 19:24:49.900974   13032 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=coredns
I1117 19:24:49.920643   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:50.221472   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:50.221472   13032 retry.go:31] will retry after 211.420504ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:50.463356   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:50.764984   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:50.765264   13032 retry.go:31] will retry after 346.475487ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:51.140229   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:51.418320   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
E1117 19:24:51.418320   13032 logs.go:281] Failed to list containers for "coredns": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:51.418975   13032 cri.go:54] listing CRI containers in root : {State:all Name:kube-scheduler Namespaces:[]}
I1117 19:24:51.454985   13032 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-scheduler
I1117 19:24:51.470774   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:51.726356   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:51.726356   13032 retry.go:31] will retry after 160.731118ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:51.915992   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:52.251123   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:52.251123   13032 retry.go:31] will retry after 531.315507ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:52.813918   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:53.199799   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
E1117 19:24:53.200316   13032 logs.go:281] Failed to list containers for "kube-scheduler": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:53.201091   13032 cri.go:54] listing CRI containers in root : {State:all Name:kube-proxy Namespaces:[]}
I1117 19:24:53.249264   13032 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-proxy
I1117 19:24:53.272878   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:53.588399   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:53.588399   13032 retry.go:31] will retry after 177.508223ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:53.793615   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:54.040069   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:54.040069   13032 retry.go:31] will retry after 358.06565ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:54.418715   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:54.694031   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:54.694031   13032 retry.go:31] will retry after 482.930289ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:55.199947   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:55.476457   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
E1117 19:24:55.476457   13032 logs.go:281] Failed to list containers for "kube-proxy": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:55.477263   13032 cri.go:54] listing CRI containers in root : {State:all Name:kube-controller-manager Namespaces:[]}
I1117 19:24:55.510012   13032 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-controller-manager
I1117 19:24:55.523107   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:55.784374   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:55.784374   13032 retry.go:31] will retry after 134.59416ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:55.944506   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:56.279652   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:56.279652   13032 retry.go:31] will retry after 496.949372ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:56.803386   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:57.147480   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:57.147480   13032 retry.go:31] will retry after 345.642066ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:57.521972   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:57.881942   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
E1117 19:24:57.881942   13032 logs.go:281] Failed to list containers for "kube-controller-manager": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:57.882636   13032 cri.go:54] listing CRI containers in root : {State:all Name:kindnet Namespaces:[]}
I1117 19:24:57.926385   13032 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kindnet
I1117 19:24:57.943974   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:58.143386   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:58.143386   13032 retry.go:31] will retry after 126.667551ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:58.302110   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:58.592868   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:58.593580   13032 retry.go:31] will retry after 355.737147ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:58.973309   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:59.276049   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
E1117 19:24:59.276049   13032 logs.go:281] Failed to list containers for "kindnet": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:59.278024   13032 logs.go:123] Gathering logs for dmesg ...
I1117 19:24:59.278344   13032 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I1117 19:24:59.294223   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:24:59.615242   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:24:59.615570   13032 retry.go:31] will retry after 286.127923ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:24:59.931521   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:00.191257   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:25:00.191536   13032 retry.go:31] will retry after 267.933555ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:25:00.478704   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:00.802270   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
W1117 19:25:00.802270   13032 logs.go:130] failed dmesg: command: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400" NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
 output: 
I1117 19:25:00.802270   13032 logs.go:123] Gathering logs for describe nodes ...
I1117 19:25:00.802795   13032 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I1117 19:25:00.819769   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:01.080212   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:25:01.080212   13032 retry.go:31] will retry after 337.195903ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:25:01.450565   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:01.778612   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:25:01.779175   13032 retry.go:31] will retry after 530.379437ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:25:02.327472   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:02.526204   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
W1117 19:25:02.526204   13032 logs.go:130] failed describe nodes: command: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig" NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
 output: 
I1117 19:25:02.526204   13032 logs.go:123] Gathering logs for Docker ...
I1117 19:25:02.526204   13032 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I1117 19:25:02.540997   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:02.769858   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:25:02.770807   13032 retry.go:31] will retry after 228.220417ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:25:03.029317   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:03.265504   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:25:03.265504   13032 retry.go:31] will retry after 230.506475ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:25:03.519431   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:03.761945   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:25:03.762020   13032 retry.go:31] will retry after 604.998227ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:25:04.398768   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:04.652392   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
W1117 19:25:04.652392   13032 logs.go:130] failed Docker: command: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400" NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
 output: 
I1117 19:25:04.652392   13032 logs.go:123] Gathering logs for container status ...
I1117 19:25:04.653067   13032 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I1117 19:25:04.671975   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:04.960644   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:25:04.960644   13032 retry.go:31] will retry after 208.034677ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:25:05.195927   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:05.426485   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:25:05.426988   13032 retry.go:31] will retry after 530.564653ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:25:06.002568   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:06.372470   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
W1117 19:25:06.373058   13032 logs.go:130] failed container status: command: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a" NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
 output: 
I1117 19:25:06.373177   13032 logs.go:123] Gathering logs for kubelet ...
I1117 19:25:06.373177   13032 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I1117 19:25:06.398738   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:06.649846   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:25:06.650039   13032 retry.go:31] will retry after 336.084923ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:25:07.015678   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:07.333675   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
I1117 19:25:07.333675   13032 retry.go:31] will retry after 195.451605ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
I1117 19:25:07.562679   13032 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro
W1117 19:25:07.797366   13032 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro returned with exit code 1
W1117 19:25:07.797366   13032 logs.go:130] failed kubelet: command: /bin/bash -c "sudo journalctl -u kubelet -n 400" NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
 output: 
W1117 19:25:07.798500   13032 out.go:369] Error starting cluster: start: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
W1117 19:25:07.798500   13032 out.go:239] 
W1117 19:25:07.799547   13032 out.go:239] 💣  Error starting cluster: start: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range

W1117 19:25:07.800084   13032 out.go:239] 
W1117 19:25:07.804681   13032 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
E1117 19:25:07.807975   13032 out.go:453] unable to execute failed to start node: start: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
: template: failed to start node: start: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range
:1:227: executing "failed to start node: start: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for \"electro\": docker container inspect -f \"'{{(index (index .NetworkSettings.Ports \"22/tcp\") 0).HostPort}}'\" electro: exit status 1\nstdout:\n\n\nstderr:\ntemplate parsing error: template: :1:4: executing \"\" at <index (index .NetworkSettings.Ports \"22/tcp\") 0>: error calling index: reflect: slice index out of range\n" at <index .NetworkSettings.Ports "22/tcp">: error calling index: index of untyped nil - returning raw string.
I1117 19:25:07.810334   13032 out.go:177] 
W1117 19:25:07.811465   13032 out.go:239] ❌  Exiting due to GUEST_START: failed to start node: start: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "electro": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" electro: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range

W1117 19:25:07.811465   13032 out.go:239] 
W1117 19:25:07.813425   13032 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I1117 19:25:07.815014   13032 out.go:177] 


